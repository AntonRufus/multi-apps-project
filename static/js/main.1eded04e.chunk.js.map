{"version":3,"sources":["components/creators/Creator.jsx","components/nav_bar/NavBar.jsx","components/pomodoro_timer/PomodoroTimer.jsx","components/markdown_editor/MarkdownEditor.jsx","components/timer/JustTimer.jsx","components/browser_tabs/BrowserTabs.jsx","App.js","reportWebVitals.js","index.js","components/pomodoro_timer/PomodoroTimer.module.css","components/markdown_editor/MarkdownEditor.module.css","components/timer/JustTimer.module.css"],"names":["NavCreator","props","to","title","RouteCreator","exact","path","render","NavBar","padTime","time","toString","padStart","PomodoroTimer","useState","setTitle","timeLeft","setTimeLeft","isRunning","setIsRunning","intervalRef","useRef","alert","useAlert","resetTimer","clearInterval","current","minutes","Math","floor","seconds","className","css","wrapper","min","max","value","type","onChange","event","target","timer","buttons","style","backgroundColor","onClick","setInterval","show","MarkdownEditor","markdown","setMarkdown","instructions","e","preview","source","JustTimer","hoursLeft","setHoursLeft","minutesLeft","setMinutesLeft","secondsLeft","setSecondsLeft","hoursNumber","hours","minutesNumber","secondsNumber","defaultValue","sum","Number","BrowserTabs","App","hi","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","template","AlertTemplate","position","timeout","offset","transition","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.1eded04e.chunk.js","sourcesContent":["import {NavLink, Route} from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nexport const NavCreator   = props => <div> <hr/> <NavLink to= { props.to } > { props.title } </NavLink> </div>\r\n\r\nexport const RouteCreator = props => <Route exact path= { props.path } render= { props.render } />\r\n","import React from \"react\";\r\nimport {NavCreator} from \"../creators/Creator\";\r\n\r\nconst NavBar = () => {\r\n    return <div>\r\n        <NavCreator     to={ '/home' }                title={ 'Home page' }         />\r\n        <NavCreator     to={ '/pomodoro_timer' }      title={ 'Pomodoro Timer' }    />\r\n        <NavCreator     to={ '/just_timer' }          title={ 'Just Timer' }        />\r\n        <NavCreator     to={ '/markdown_editor' }     title={ 'Markdown Editor' }   />\r\n        <NavCreator     to={ '/browser_tabs' }        title={ 'Browser Tabs' }      />\r\n\r\n        <hr/>\r\n    </div>\r\n}\r\n\r\nexport default NavBar;\r\n","import React, {useState, useRef} from \"react\";\r\nimport css from \"./PomodoroTimer.module.css\"\r\nimport {useAlert} from \"react-alert\";\r\n\r\nconst padTime = time => {\r\n    return time.toString().padStart(2, '0');\r\n}\r\n\r\nconst PomodoroTimer = () => {\r\n    //Hooks\r\n    const [title, setTitle] = useState('Let the countdown begin!');\r\n    const [timeLeft, setTimeLeft] = useState(25 * 60);\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const intervalRef = useRef(null);\r\n\r\n    const alert = useAlert();\r\n\r\n    //Start timer function\r\n    function startTimer() {\r\n        if (intervalRef.current !== null) return;\r\n        setTitle('Started!');\r\n        setIsRunning(true);\r\n        intervalRef.current = setInterval(() => {\r\n            setTimeLeft(timeLeft => {\r\n                if (timeLeft >= 1) return timeLeft - 1;\r\n\r\n                //reset the timer\r\n                resetTimer();\r\n                alert.show('Time is over'); // why 2 times???\r\n                return 0;\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    //Stop timer function\r\n    function stopTimer() {\r\n        if (intervalRef.current == null) return;\r\n\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n        setTitle('Stopped!');\r\n        setIsRunning(false);\r\n    }\r\n\r\n    //Reset timer function\r\n    function resetTimer() {\r\n        setTitle('Ready to go one more round?');\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n        setIsRunning(false);\r\n        setTimeLeft(25 * 60);\r\n    }\r\n\r\n    //Math\r\n    const minutes = padTime(Math.floor(timeLeft / 60));\r\n    const seconds = padTime(Math.floor(timeLeft - minutes * 60));\r\n\r\n    return (\r\n        <div className={css.wrapper}>\r\n            <h2>{title}</h2>\r\n            <div>\r\n                {!isRunning && <input min={'0'} max={'1500'} value={timeLeft} type=\"number\"\r\n                                      onChange={event => setTimeLeft(event.target.value)}/>}\r\n            </div>\r\n            <div className={css.timer}>\r\n                <span>{minutes}</span>\r\n                <span>:</span>\r\n                <span>{seconds}</span>\r\n            </div>\r\n            <div className={css.buttons}>\r\n                {!isRunning && <button style={{backgroundColor: 'green'}} onClick={startTimer}>Start</button>}\r\n                {isRunning && <button style={{backgroundColor: 'orange'}} onClick={stopTimer}>Stop</button>}\r\n                <button style={{backgroundColor: 'red'}} onClick={resetTimer}>Reset</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default PomodoroTimer;\r\n","import React, {useState} from \"react\";\r\n// import marked from \"marked/lib/marked.esm\";\r\n// import marked_1 from \"marked/lib/marked.esm\";\r\nimport ReactMarkdown from \"react-markdown\";\r\nimport css from \"./MarkdownEditor.module.css\";\r\n\r\nconst MarkdownEditor = () => {\r\n    const [markdown, setMarkdown] = useState('# Enter your text.');\r\n\r\n    const handleChange = (e) => {\r\n        setMarkdown(e.target.value)\r\n    }\r\n\r\n    return (<div className={css.wrapper}>\r\n        <div className={css.instructions}>\r\n            <div>use '>' for `blockquote`, 'double Enter' for paragraph and '-' for `list`</div>\r\n            <hr/>\r\n        </div>\r\n        <textarea onChange={handleChange} value={markdown}/>\r\n\r\n        {/*<div className={css.preview} dangerouslySetInnerHTML={{__html: marked(markdown)}}/>*/}\r\n        {/*<div className={css.preview} dangerouslySetInnerHTML={{__html: marked_1(markdown)}}/>*/}\r\n\r\n        <ReactMarkdown className={css.preview} source={markdown}/>\r\n    </div>)\r\n};\r\n\r\nexport default MarkdownEditor;\r\n","import React, {useState, useRef} from \"react\";\r\nimport css from \"./JustTimer.module.css\"\r\nimport {useAlert} from \"react-alert\";\r\n\r\nconst padTime = time => {\r\n    return time.toString().padStart(2, '0');\r\n}\r\n\r\nconst JustTimer = () => {\r\n    //Hooks\r\n    const [title, setTitle] = useState('Timer is ready to go!');\r\n    const [timeLeft, setTimeLeft] = useState(0);\r\n\r\n    const [hoursLeft, setHoursLeft] = useState(0);\r\n    const [minutesLeft, setMinutesLeft] = useState(0);\r\n    const [secondsLeft, setSecondsLeft] = useState(0);\r\n\r\n    const [isRunning, setIsRunning] = useState(false);\r\n    const intervalRef = useRef(null);\r\n\r\n    const alert = useAlert();\r\n\r\n    //Start timer function\r\n    function startTimer() {\r\n        if (intervalRef.current !== null) return;\r\n        setTitle('Started!');\r\n        setIsRunning(true);\r\n        intervalRef.current = setInterval(() => {\r\n            setTimeLeft(timeLeft => {\r\n                if (timeLeft >= 1) return timeLeft - 1;\r\n\r\n                //reset the timer\r\n                resetTimer();\r\n                alert.show('Time is over'); // why 2 times????\r\n                return 0;\r\n            });\r\n        }, 1000);\r\n    }\r\n\r\n    //Stop timer function\r\n    function stopTimer() {\r\n        if (intervalRef.current == null) return;\r\n\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n        setTitle('Stopped!');\r\n        setIsRunning(false);\r\n    }\r\n\r\n    //Reset timer function\r\n    function resetTimer() {\r\n        setTitle('Ready to go one more round?');\r\n        clearInterval(intervalRef.current);\r\n        intervalRef.current = null;\r\n        setIsRunning(false);\r\n        setTimeLeft(0);\r\n        setHoursLeft(0);\r\n        setMinutesLeft(0);\r\n        setSecondsLeft(0);\r\n    }\r\n\r\n    //Math\r\n    const hoursNumber = Math.floor(timeLeft / 3600);\r\n    const hours = padTime(hoursNumber);\r\n    const minutesNumber = Math.floor(timeLeft / 60 - hoursNumber * 60);\r\n    const minutes = padTime(minutesNumber);\r\n    const secondsNumber = Math.floor(timeLeft - hoursNumber * 3600 - minutesNumber * 60);\r\n    const seconds = padTime(secondsNumber);\r\n\r\n    function sumTimer() {\r\n        const sum = Number(hoursLeft * 3600) + Number(minutesLeft * 60) + Number(secondsLeft);\r\n        setTimeLeft(sum);\r\n    }\r\n\r\n    return (\r\n        <div className={css.wrapper}>\r\n            <h2>{title}</h2>\r\n            <div>\r\n                {!isRunning &&\r\n                <div>hours: <input min={'0'} max={'23'} defaultValue={hoursNumber} type=\"number\"\r\n                                   onChange={event => setHoursLeft(event.target.value)}/>\r\n                </div>}\r\n                {!isRunning &&\r\n                <div>minutes: <input min={'0'} max={'59'} defaultValue={minutesNumber} type=\"number\"\r\n                                     onChange={event => setMinutesLeft(event.target.value)}/>\r\n                </div>}\r\n                {!isRunning &&\r\n                <div>seconds: <input min={'0'} max={'59'} defaultValue={secondsNumber} type=\"number\"\r\n                                     onChange={event => setSecondsLeft(event.target.value)}/>\r\n                </div>}\r\n                {!isRunning && <button onClick={sumTimer}>Set / Reset</button>}\r\n            </div>\r\n            <div className={css.timer}>\r\n                <span>{hours}</span>\r\n                <span>:</span>\r\n                <span>{minutes}</span>\r\n                <span>:</span>\r\n                <span>{seconds}</span>\r\n            </div>\r\n            <div className={css.buttons}>\r\n                {!isRunning && <button style={{backgroundColor: 'green'}} onClick={startTimer}>Start</button>}\r\n                {isRunning && <button style={{backgroundColor: 'orange'}} onClick={stopTimer}>Stop</button>}\r\n                <button style={{backgroundColor: 'red'}} onClick={resetTimer}>Reset</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default JustTimer;\r\n","import React, {useState, useRef} from \"react\";\r\nimport css from \"./BrowserTabs.module.css\"\r\n\r\n\r\nconst BrowserTabs = () => {\r\n\r\n    return (<div>123</div>\r\n    )\r\n};\r\n\r\nexport default BrowserTabs;\r\n","import './App.css';\nimport React from \"react\";\nimport {Redirect} from \"react-router-dom\";\nimport NavBar from \"./components/nav_bar/NavBar\";\nimport PomodoroTimer from \"./components/pomodoro_timer/PomodoroTimer\";\nimport MarkdownEditor from \"./components/markdown_editor/MarkdownEditor\";\nimport JustTimer from \"./components/timer/JustTimer\";\nimport BrowserTabs from \"./components/browser_tabs/BrowserTabs\";\nimport {RouteCreator} from \"./components/creators/Creator\";\n\nfunction App(props) {\n    return (\n        <div className=\"App_header\">\n            <div className=\"Nav_bar\">\n                <NavBar/>\n            </div>\n            <div className=\"content\">\n                <RouteCreator   path={ '/' }                  render={ () => <Redirect to={'/home'}/> }     />\n                <RouteCreator   path={ '/home' }              render={ () => props.hi }                     />\n                <RouteCreator   path={ '/pomodoro_timer' }    render={ () => <PomodoroTimer/> }             />\n                <RouteCreator   path={ '/just_timer' }        render={ () => <JustTimer/> }                 />\n                <RouteCreator   path={ '/markdown_editor' }   render={ () => <MarkdownEditor/> }            />\n                <RouteCreator   path={ '/browser_tabs' }      render={ () => <BrowserTabs/> }               />\n            </div>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport {Provider as AlertProvider} from 'react-alert';\nimport AlertTemplate from 'react-alert-template-basic';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\n\nconst options = {\n    position: 'bottom center',\n    timeout: 5000,\n    offset: '30px',\n    transition: 'scale'\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <HashRouter>\n            <AlertProvider template={AlertTemplate} {...options}>\n                <App hi={'Hi There!'}/>\n            </AlertProvider>\n        </HashRouter>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"PomodoroTimer_wrapper__1wmEO\",\"timer\":\"PomodoroTimer_timer__1s4sb\",\"buttons\":\"PomodoroTimer_buttons__3GXoC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MarkdownEditor_wrapper__1ip6g\",\"instructions\":\"MarkdownEditor_instructions__3CaAN\",\"preview\":\"MarkdownEditor_preview__g3x7F\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"JustTimer_wrapper__34m8I\",\"timer\":\"JustTimer_timer__3S6Vf\",\"buttons\":\"JustTimer_buttons__1ZbIm\"};"],"sourceRoot":""}